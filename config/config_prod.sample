#!/bin/bash 
#---------------------------------------------
# copy file and remove "sample." in the name
# make changes for your environment
#---------------------------------------------

# Language: EN, DE ... see ./app/mbox_language.js
export MBOX_LANGUAGE="EN"        # options: "EN" if English, "DE" if German
export MBOX_WITH_RPI="yes"       # options: "yes" if is Raspberry, "no" if not
export MBOX_WITH_HARDWARE="yes"  # options_ "yes" if harware, "no" if software only
export MBOX_DATA_USB="yes"       # options: "yes" if music data on usb stick - default mount point is /media/usb, "no" if not
export MBOX_DATA_USB_TYPE="auto" # options: "auto", "vfat", "ext2", "ext3", "ext4", "nfs" ... or see "man mount"
export MBOX_DATA_USB_CODE="utf8" # options: "utf8" .. remove to use default or see "man mount"
export MBOX_SPEEK_MSG="yes"      # options: "yes" if the box should speek during startup and on errors, "no" if not
export MBOX_SPEEK_ASK_WHOM="DAD" # options: who should be asked, if the box doesn't work correctly: "DAD", "MUM, "THE-ADMIN"

# Stage
export MBOX_APP_VERSION="app"    # options: => directory name
export MBOX_CURRENT_STAGE="prod" # options: prod, test, <your name>
export MBOX_ACTIVE_STAGE="$MBOX_CURRENT_STAGE"
export MBOX_IS_TEST="False"

# Logging
export MBOX_LOGLEVEL="warning"     # set general log-level - options: "debug", "info", "warning", "error"  (set log level for couchdb -> config/couchdb/default.ini)
export MBOX_LOG2FILE="yes"         # write logging to file - options: "yes", "no"        
export MBOX_LOG2FILE_PATH="/log/server.log"   # log-file name -> "/log/" is mapped to directory ./log 

export MBOX_LOGLEVEL_LOAD="info"   # set log-level for loading data - options: "debug", "info", "warning", "error"  (set log level for couchdb -> config/couchdb/default.ini)
export MBOX_LOG2FILE_LOAD="yes"    # write logging for loading data to file - options: "yes", "no"
export MBOX_LOG2FILE_LOAD_PATH="/log/load_metadata.log" # log-file name -> "/log/" is mapped to directory ./log 

# Settings
export WLAN_COUNTRY="DE"
export WLAN_DEVICE="wlan0"

# Wifi Data
export WIFI_SSID="YourWifi"            # default network to connect to ...
export WIFI_PWD="YourPwd"              # pwd for default network ... use "\$" instead of "$"

# Hotspot Data
export HOTSPOT_SSID="JCmbox"
export HOTSPOT_PWD="0123456789"        # must have at least 8 characters ...

#---------------------------------------------

# Network Devices 
export WLAN="wlan0"
export ETH="eth0"

# Identify device IP addresses
export WLAN0_IP=`/sbin/ip -o -4 addr list $WLAN | awk '{print $4}' | cut -d/ -f1`
export ETH0_IP=`/sbin/ip -o -4 addr list $ETH | awk '{print $4}' | cut -d/ -f1`
export SERVER_IP="$WLAN0_IP"
export SERVER_IP_DEVICE="$WLAN"

# Ports
export MBOX_NETWORK="192.168.200"
export MBOX_CLIENT_PORT=80
export MBOX_SERVER_PORT=5005
export MBOX_DATABASE_PORT=5105

# DNS Server
export DNS01="1.1.1.1"
export DNS02="8.8.8.8"
export DNS03="208.67.222.222"

# Docker container names
export MBOX_DOCKER_DATABASE="mbox_db_$MBOX_CURRENT_STAGE"
export MBOX_DOCKER_CLIENT="mbox_client_$MBOX_CURRENT_STAGE"
export MBOX_DOCKER_SERVER="mbox_server_$MBOX_CURRENT_STAGE"
export MBOX_DATABASE_SERVER="$SERVER_IP"

# Docker container names
export MBOX_DB_USER="mbox"
export MBOX_DB_PASSWORD="mbox"

# activate rfid / button module
export MBOX_RFID_ACTIVE="true"
export MBOX_RFID_DEMOCARD="125,232,21,163"
export MBOX_BUTTON_ACTIVE="true"

# Directories
export MBOX_DIR_DATA_ROOT="/projects_data"
export MBOX_DIR_DATA="$MBOX_DIR_DATA_ROOT/$MBOX_CURRENT_STAGE/mbox"
export MBOX_DIR="/projects/$MBOX_CURRENT_STAGE/mbox"
export MBOX_DIR_CLIENT="$MBOX_DIR/$MBOX_APP_VERSION"
export MBOX_DIR_SERVER="$MBOX_DIR/server"
export MBOX_DIR_JCMODULES="/projects/$MBOX_CURRENT_STAGE/modules"
export MBOX_DIR_DOCKERCOMPOSE="/usr/local/bin"

# Mount points (if no extra device for data, use the same as for system)
if [ $MBOX_DATA_USB == "yes" ]; then
  export MBOX_MOUNT_SYSTEM="/"
  export MBOX_MOUNT_DATA="/media/usb"
  export MBOX_MOUNT_USB="/dev/sda1"
else
  export MBOX_MOUNT_SYSTEM="/"
  export MBOX_MOUNT_DATA="/"
  export MBOX_MOUNT_USB=""
fi

# Docker Images
if [ $MBOX_WITH_RPI == "yes" ]; then
  export MBOX_DOCKERIMAGE_CLIENT="php:7.1-apache"
  export MBOX_DOCKERIMAGE_COUCHDB="matthiasg/rpi-couchdb:latest"   # usr for raspberry
else
  export MBOX_DOCKERIMAGE_CLIENT="php:7.1-apache"
  export MBOX_DOCKERIMAGE_COUCHDB="apache/couchdb:latest"          # use for regular x86
fi 

#---------------------------------------------
export THIS_IS_THE_PROJECT_TEMPLATE="Please edit not here, but the orginial configuration file. This files is created using a template."
export DOLLAR="$"


